[tool:pytest]
minversion = 8.0
addopts = 
    -ra
    -q
    --tb=short
    --cov=session_mgmt_mcp
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-branch
    --cov-fail-under=85
    --asyncio-mode=auto
    --timeout=300

testpaths = 
    tests

python_files = 
    test_*.py
    *_test.py

python_classes = 
    Test*

python_functions = 
    test_*

# Async configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = session

# Test markers
markers =
    # Test categories
    unit: marks tests as unit tests
    integration: marks tests as integration tests  
    functional: marks tests as functional tests
    performance: marks tests as performance tests
    security: marks tests as security tests
    
    # Test characteristics
    slow: marks tests as slow (deselect with '-m "not slow"')
    fast: marks tests as fast running
    smoke: marks tests as smoke tests
    regression: marks tests as regression tests
    
    # Component markers
    mcp: marks tests as MCP server tests
    database: marks tests as database tests
    embedding: marks tests as embedding/vector tests
    api: marks tests as API tests
    
    # Async markers  
    async_test: mark test as requiring async event loop
    no_leaks: detect asyncio task leaks
    
    # Property-based testing
    property: marks tests as property-based tests
    hypothesis: marks tests using Hypothesis
    
    # External dependencies
    external: marks test requiring external services
    online: marks test requiring internet connection
    
    # Performance testing
    benchmark: mark test as a benchmark
    memory: mark test for memory profiling
    
    # Special test types
    mutation: marks test as mutation testing
    chaos: marks test as chaos engineering test
    ai_generated: marks test as AI-generated test

# Warning filters
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning:pkg_resources.*
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnknownMarkWarning:pytest_benchmark.*
    ignore::RuntimeWarning:duckdb.*
    ignore::FutureWarning:transformers.*
    ignore::UserWarning:onnxruntime.*

# Test timeout
timeout = 300
timeout_method = thread