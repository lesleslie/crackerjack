[build-system]
build-backend = "pdm.backend"
requires = [ "pdm-backend" ]

[project]
name = "crackerjack"
version = "0.19.6"
description = "Crackerjack: code quality toolkit"
readme = "README.md"
keywords = [
  "bandit",
  "black",
  "creosote",
  "mypy",
  "pyright",
  "pytest",
  "refurb",
  "ruff",
]
license.text = "BSD-3-CLAUSE"
maintainers = [
  { name = "lesleslie", email = "les@wedgwoodwebworks.com" },
]

authors = [
  { name = "lesleslie", email = "les@wedgwoodwebworks.com" },
]
requires-python = ">=3.13"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "License :: OSI Approved :: BSD License",
  "Operating System :: POSIX",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Software Development :: Testing",
  "Topic :: Utilities",
  "Typing :: Typed",
]
dependencies = [
  "autotyping>=24.9",
  "pdm>=2.24.2",
  "pdm-bump>=0.9.12",
  "pre-commit>=4.2",
  "pydantic>=2.11.5",
  "pytest>=8.4",
  "pytest-asyncio>=1",
  "pytest-benchmark>=5.1",
  "pytest-cov>=6.1.1",
  "pytest-mock>=3.14.1",
  "pytest-timeout>=2.4",
  "pytest-xdist>=3.7",
  "rich>=14",
  "tomli-w>=1.2",
  "typer>=0.16",
  "uv>=0.7.10",
]
urls.documentation = "https://github.com/lesleslie/crackerjack"
urls.homepage = "https://github.com/lesleslie/crackerjack"
urls.repository = "https://github.com/lesleslie/crackerjack"

[tool.ruff]
target-version = "py313"
line-length = 88
fix = true
unsafe-fixes = true

show-fixes = true
output-format = "full"
format.docstring-code-format = true
lint.extend-select = [
  "C901",
  "D",
  "F",    # pyflakes
  "I",
  "UP",   # pyupgrade (includes F-string conversion)
]
lint.ignore = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "F821",
  "UP040",
]
lint.fixable = [ "ALL" ]
lint.unfixable = [  ]
lint.isort.no-lines-before = [
  "first-party",
]
lint.mccabe.max-complexity = 13
lint.pydocstyle.convention = "google"

[tool.codespell]
skip = "*/data/*"
quiet-level = 3
ignore-words-list = "crate,uptodate,nd"

[tool.pyproject-fmt]
column_width = 120
indent = 2

[tool.pytest.ini_options]
# Core pytest configuration
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
python_files = [ "test_*.py", "*_test.py" ]
testpaths = [ "tests", "crackerjack" ]
python_classes = [ "Test*" ]
python_functions = [ "test_*" ]

# Markers
markers = [
  "unit: marks test as a unit test",
  "benchmark: mark test as a benchmark (disables parallel execution)",
  "integration: marks test as an integration test",
]

# Default timeout settings
timeout = 60
timeout_method = "thread"

# Test command options
addopts = "--cov=crackerjack --cov-report=term --cov-fail-under=42"

[tool.pytest.benchmark]
disable_gc = true
warmup = false
warmup_iterations = 0

[tool.coverage.run]
branch = false
source = [ "crackerjack" ]
data_file = ".coverage"
parallel = false
omit = [
  "*/tests/*",
  "*/site-packages/*",
  "*/__pycache__/*",
  "*/__init__.py",
  "*/_version.py",
  "*/conftest.py",
  "*/test_*.py",
  "*/_test.py",
]

[tool.coverage.report]
exclude_also = [
  "pragma: no cover",
  "def __repr__",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "pass",
  "raise ImportError",
  "except ImportError",
  "def __str__",
  "@abstractmethod",
]
ignore_errors = false

[tool.pyright]
verboseOutput = true
include = [
  "crackerjack",
]
exclude = [
  "scratch",
]
extraPaths = [
  ".venv/lib/python3.13/site-packages/",
]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
reportOptionalMemberAccess = false
reportOptionalCall = false
reportUnknownMemberType = false
reportUnknownVariableType = false
reportUnknownArgumentType = false
reportInvalidTypeForm = false
reportUnknownLambdaType = false
reportUnknownParameterType = "warning"
reportPrivateUsage = false
pythonVersion = "3.13"

[tool.vulture]
min_confidence = 86
paths = [ "crackerjack" ]
ignore_names = [ "cls" ]

[tool.creosote]
paths = [
  "crackerjack",
]
deps-file = "pyproject.toml"
exclude-deps = [
  "pdm-bump",
  "autotyping",
  "pre-commit",
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-mock",
  "pytest-xdist",
  "pytest-benchmark",
  "pdm",
  "pyfiglet",
  "pyyaml",
  "uv",
  "tomli-w",
  "google-crc32c",
  "pytest-timeout",
]

[tool.refurb]
enable_all = true
quiet = true

[tool.bandit]
target = [
  "crackerjack",
]
skips = [
  "B101",
  "B301",
  "B311",
  "B403",
  "B404",
  "B602",
  "B603",
  "B607",
  "B704",
]
